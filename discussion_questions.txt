A.Recursion
1. In your own words, what is recursion?
Recursion is when a function calls itself. In recursion, the function performs an action and calls itself before returning an output, essentially having the same function nested over-and-over again until the base case is met.

2. Why is it necessary to have a base case?
Like while loops, recursive functions need a base case (a requirement to meet) in order to stop the recursion. If not, you would be stuck in an infinite recursion.

A base case is usually the thing you are looking to meet. Once you find it, you treat it differently from the others so that it stops the recursion.

B. Graphs
1. What is a graph?
Graphs are similar to trees but the biggest difference is that they contain loops. 

2. How is a graph different from a tree?
Graphs can be directed or non-directed.
They can contain ‘cycles’.
Graphs have no hierarchy like trees do.
Graphs have no roots or leaves.
Graph nodes don’t have ‘children’.

3. Give an example of something that would be good to model with a graph.
Google Map directions: nodes could be street intersection, freeway routes or tolls. The weight could be how long does it take me to reach my destination if I take Node A, vs Node B.

